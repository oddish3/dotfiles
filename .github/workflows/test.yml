name: Test Dotfiles Installation

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    steps:
    - uses: actions/checkout@v3

    - name: Cache packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pip
          ~/Library/Caches/pip
          /var/cache/apt/archives
        key: ${{ runner.os }}-packages-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-packages-

    - name: Set up test environment (Ubuntu)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y git curl wget python3 python3-pip zsh

    - name: Set up test environment (macOS)
      if: runner.os == 'macOS'
      run: |
        brew update
        brew install python3 zsh

    - name: Create .gitconfig.secret
      run: |
        echo "[user]" > ~/.gitconfig.secret
        echo "name = ${{ secrets.GIT_USER_NAME }}" >> ~/.gitconfig.secret
        echo "email = ${{ secrets.GIT_USER_EMAIL }}" >> ~/.gitconfig.secret

    - name: Configure Git to include .gitconfig.secret
      run: |
        echo "[include]" > ~/.gitconfig
        echo "path = ~/.gitconfig.secret" >> ~/.gitconfig

    - name: Install dotfiles
      run: |
        set -x  # Enable verbose output
        curl -fsSL https://oddish3.github.io/dotfiles/etc/install | bash
        echo "Exit status: $?"

    - name: Test idempotency
      run: |
        set -x  # Enable verbose output
        curl -fsSL https://oddish3.github.io/dotfiles/etc/install | bash
        echo "Exit status: $?"

    - name: Change default shell to zsh
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo chsh -s $(which zsh) $USER
        elif [ "$RUNNER_OS" == "macOS" ]; then
          sudo chsh -s /bin/zsh $USER
        fi

    - name: Verify installation
      run: |
        set -ex
        [ -d "$HOME/.dotfiles" ]
        for dir in bin config etc git nvim python tmux vim zsh; do
          [ -d "$HOME/.dotfiles/$dir" ]
        done
        [ -f "$HOME/.dotfiles/install.py" ]
        for file in .bashrc .gitconfig .vimrc .zshrc; do
          [ -L "$HOME/$file" ]
        done
        echo "Current shell: $SHELL"
        echo "All checks passed successfully!"

    - name: Verify zsh is default shell
      run: |
        if [ "$SHELL" != "$(which zsh)" ]; then
          echo "ZSH is not the default shell"
          exit 1
        fi

    - name: Lint shell scripts
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get install -y shellcheck
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install shellcheck
        fi
        shellcheck **/*.sh

    - name: Lint Python files
      run: |
        pip3 install flake8
        flake8 .

    - name: Check Neovim installation
      run: |
        ~/.local/bin/nvim --version | head -n3
        if [ $? -ne 0 ]; then
          echo "Neovim installation failed"
          exit 1
        fi