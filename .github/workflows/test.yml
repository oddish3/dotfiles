name: Test Dotfiles Installation

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['*']

jobs:
  test:
    strategy:
      matrix:
        ubuntu-version: [20.04, 22.04]
    runs-on: ubuntu-${{ matrix.ubuntu-version }}
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v3

    - name: Cache apt packages
      uses: actions/cache@v3
      with:
        path: /var/cache/apt/archives
        key: ${{ runner.os }}-apt-${{ hashFiles('**/package-lock.json') }}
        restore-keys: ${{ runner.os }}-apt-

    - name: Set up test environment
      run: |
        sudo apt-get update
        sudo apt-get install -y git curl wget python3 python3-pip zsh
      
    - name: Create .gitconfig.secret
      run: |
        echo "[user]" > ~/.gitconfig.secret
        echo "name = ${{ secrets.GIT_USER_NAME }}" >> ~/.gitconfig.secret
        echo "email = ${{ secrets.GIT_USER_EMAIL }}" >> ~/.gitconfig.secret

    - name: Configure Git to include .gitconfig.secret
      run: |
        echo "[include]" > ~/.gitconfig
        echo "path = ~/.gitconfig.secret" >> ~/.gitconfig

    - name: Install dotfiles
      run: |
        set -x  # Enable verbose output
        curl -fsSL https://oddish3.github.io/dotfiles/etc/install | bash
        echo "Exit status: $?"

    - name: Test idempotency
      run: |
        set -x  # Enable verbose output
        curl -fsSL https://oddish3.github.io/dotfiles/etc/install | bash
        echo "Exit status: $?"

    - name: Change default shell to zsh
      run: sudo chsh -s $(which zsh) $USER

    - name: Verify installation
      run: |
        set -ex
        [ -d "$HOME/.dotfiles" ]
        for dir in bin config etc git nvim python tmux vim zsh; do
          [ -d "$HOME/.dotfiles/$dir" ]
        done
        [ -f "$HOME/.dotfiles/install.py" ]
        for file in .bashrc .gitconfig .vimrc .zshrc; do
          [ -L "$HOME/$file" ]
        done
        echo "Current shell: $SHELL"
        echo "All checks passed successfully!"

    - name: Verify zsh is default shell
      run: |
        if [ "$SHELL" != "$(which zsh)" ]; then
          echo "ZSH is not the default shell"
          exit 1
        fi

    - name: Lint shell scripts
      run: |
        sudo apt-get install -y shellcheck
        shellcheck **/*.sh

    - name: Lint Python files
      run: |
        pip install flake8
        flake8 .